# OSBasicSettings.yml
---
- hosts: win
  collections:
    - ansible.windows
  gather_facts: no
  vars_files:
    - params.yml
  tasks:
    - name: Initialize disk
      win_disk_image:
        disk_number: "{{ disk_number }}"  # Specify the disk number
        initialize: yes
        offline: yes
      when: disk_number is defined

    - name: Create partition
      win_disk_image:
        disk_number: "{{ disk_number }}"  # Specify the disk number
        partition_size: "{{ partition_size }}"  # Specify the partition size
        offline: yes
        drive_letter: "{{ drive_letter }}"  # Specify the desired drive letter
        state: present
      when: disk_number is defined and partition_size is defined and drive_letter is defined

    - name: Format partition
      win_format:
        drive_letter: "{{ drive_letter }}"  # Specify the drive letter
        fs_type: "{{ filesystem_type }}"  # Specify the filesystem type, e.g., NTFS
        confirm: yes
      when: drive_letter is defined

    - name: Mount partition
      win_disk_image:
        disk_number: "{{ disk_number }}"  # Specify the disk number
        drive_letter: "{{ drive_letter }}"  # Specify the drive letter
        mount_path: "{{ mount_path }}"  # Specify the mount path
        offline: yes
        state: present
      when: disk_number is defined and drive_letter is defined

    - name: Move paging file to C:\ drive
      win_pagefile:
        drive: "C:"  # Move paging file to C:\ drive

    - name: Change drive letter
      win_disk_partition:
        disk_number: "{{ disk_number }}"  # Specify the disk number
        partition_number: 1  # Assuming it's the first partition on the disk
        drive_letter: "{{ new_drive_letter }}"  # Specify the new drive letter
      when: disk_number is defined and new_drive_letter is defined

    - name: Move paging file to temporary storage drive
      win_pagefile:
        drive: "{{ temporary_drive_letter }}"
      when: temporary_drive_letter is defined

    - name: Install SNMP Service
      win_feature:
        name: SNMP-Service
        state: present

    - name: Configure Remote Desktop settings
      win_shell: |
        # Disable Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 1 -Force

        # Allow Remote Desktop
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force

        # Allow connections only from computers running Remote Desktop with Network Level Authentication (NLA)
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1 -Force
      when: enable_remote_desktop is defined and enable_remote_desktop

    - name: Configure Windows Defender Firewall
      win_shell: |
        # Turn on Windows Defender Firewall for Domain, Public, and Private profiles
        Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled True
      when: enable_firewall is defined and enable_firewall

    - name: Configure Performance Settings
      win_shell: |
        # Configure Processor Scheduling
        $processorScheduling = Get-WmiObject -Query "SELECT * FROM Win32_SystemDriver WHERE Name='Processor'" -Namespace "root\cimv2"
        $processorScheduling.Properties_.Item("Start").Value = 1
        $processorScheduling.Put()

        # Configure Virtual Memory
        $virtualMemory = Get-WmiObject -Query "SELECT * FROM Win32_PageFileSetting WHERE Name='_Total'" -Namespace "root\cimv2"
        $virtualMemory.InitialSize = "{{ initial_pagefile_size }}"  # Initial size in MB
        $virtualMemory.MaximumSize = "{{ maximum_pagefile_size }}"  # Maximum size in MB
        $virtualMemory.Put()

        # Configure Automatically manage paging file size for all drives
        $pagingFileSize = Get-WmiObject -Class Win32_ComputerSystem -Namespace "root\cimv2"
        $pagingFileSize.AutomaticManagedPagefile = $True
        $pagingFileSize.Put()

        # Configure Paging file size for each drive
        $pagingFile = Get-WmiObject -Query "SELECT * FROM Win32_PageFileSetting WHERE Name='_Total'" -Namespace "root\cimv2"
        $pagingFile.InitialSize = "{{ initial_pagefile_size }}"  # Initial size in MB
        $pagingFile.MaximumSize = "{{ maximum_pagefile_size }}"  # Maximum size in MB
        $pagingFile.Put()
      when: initial_pagefile_size is defined and maximum_pagefile_size is defined

    - name: Restart the system to apply changes
      win_reboot:
        reboot_timeout: 300
        msg: "Rebooting to apply changes"
