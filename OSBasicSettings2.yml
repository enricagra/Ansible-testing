# OSBasicSettings2.yml
---
---
- hosts: win
  gather_facts: no
  vars_files:
    - params.yml

  tasks:
    - name: Initialization of Data disk
      win_disk_initialize:
        disk_number: "{{ data_disk_number }}"
      when: "not domain_status.stdout and not workgroup_status.stdout"

    - name: Movement of pagefile.sys to C drive
      win_pagefile:
        drive: C:
        state: present
      when: "not domain_status.stdout and not workgroup_status.stdout"

    - name: Changing of drive letters
      win_disk:
        drive_letter: "{{ temp_drive_letter }}"
        partition_number: 2  # Replace with the correct partition number
      when: "not domain_status.stdout and not workgroup_status.stdout"

    - name: Movement of pagefile.sys to temporary drive storage
      win_pagefile:
        drive: "{{ temp_drive_letter }}"
        state: present
      when: "not domain_status.stdout and not workgroup_status.stdout"

    # Add other tasks as needed...

    - name: Windows Logs Configurations
      # Add tasks for Windows Logs configurations as needed
      debug:
        msg: "Configure Windows Logs settings here"
      when: "not domain_status.stdout and not workgroup_status.stdout"


     - name: Setting up Remote Desktop Settings
	   win_reg_stat:
            key: "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server"
       register: reg_stat_result
	
     - name: Enable Remote Desktop
		win_regmerge:
			path: "/path/to/remote_desktop_settings.reg"  # Replace with the path to your registry file
		when: "not domain_status.stdout and not workgroup_status.stdout and not reg_stat_result.exists"

     - name: Disable Windows Firewall on all Profiles
		 hosts: all
		  gather_facts: no
		 tasks:
		 
    - name: Disable Windows Firewall
      win_firewall:
        state: disabled
        profiles:
        - Domain
        - Public
        - Private

     - name: Configuration of processor scheduling and virtual memory
      win_regedit:
        key: "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\PriorityControl"
        name: "Win32PrioritySeparation"
        data: "2"
        type: dword
      when: "not domain_status.stdout and not workgroup_status.stdout"

          - name: System Startup & System failure configuration
      win_regedit:
        key: "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\CrashControl"
        name: "AutoReboot"
        data: "1"
        type: dword
      when: "not domain_status.stdout and not workgroup_status.stdout"

    ---
---
- name: Global Configuration Settings
  # Add tasks for global configurations as needed
  win_reg_stat:
    path: "{{ global_config_registry_path }}"
  register: reg_status

  - name: Create registry path if it doesn't exist
    win_reg:
      name: "{{ global_config_registry_path }}"
      state: present
    when: "not domain_status.stdout and not workgroup_status.stdout and not reg_status.exists"

  - name: Set registry values
    win_reg:
      name: "{{ global_config_registry_path }}"
      data: "{{ global_config_data }}"
      type: "{{ global_config_type }}"
      state: "{{ global_config_state }}"
    when: "not domain_status.stdout and not workgroup_status.stdout and not reg_status.exists"

- name: Time Providers
  # Add tasks for time providers configuration as needed
  win_command: w32tm /config /manualpeerlist:"{{ time_provider_peerlist }}" /syncfromflags:"{{ time_provider_syncflags }}" /reliable:"{{ time_provider_reliable }}" /update
  when: "not domain_status.stdout and not workgroup_status.stdout"

- name: Service Name Configuration
  # Add tasks for service name configuration as needed
  win_service:
    name: "{{ service_config_name }}"
    start_mode: "{{ service_config_start_mode }}"
    state: "{{ service_config_state }}"
  when: "not domain_status.stdout and not workgroup_status.stdout"

- name: IPv6 Configuration
  # Add tasks for IPv6 registry settings
  win_reg:
    name: "{{ ipv6_config_registry_path }}"
    data: "{{ ipv6_config_data }}"
    type: "{{ ipv6_config_type }}"
    state: "{{ ipv6_config_state }}"
  when: "not domain_status.stdout and not workgroup_status.stdout"

- name: File Explorer Configuration
  # Add tasks for File Explorer settings
  win_shell: |
    Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name Hidden -Value {{ file_explorer_config_show_hidden_files }}
    Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name HideFileExt -Value {{ file_explorer_config_show_file_extensions }}
    Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name ShowFullPath -Value {{ file_explorer_config_show_full_path }}
  when: "not domain_status.stdout and not workgroup_status.stdout"

- name: Event Logging Configuration
  # Add tasks for Event Logging settings
  win_reg:
    name: "HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Security"
    data:
      AuditPolicy: "{{ event_logging_config_audit_policy }}"
      MaxSize: "{{ event_logging_config_max_size_kb }}"
      Retention: "{{ event_logging_config_log_retention }}"
    type: dword
    state: present
  when: "not domain_status.stdout and not workgroup_status.stdout"
